<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="pizaaOrderProcessingPlan" statistics="disable"
  trace="disable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description>This execution plan is used to identify the overdue(late) delivery of orders</description>
  <siddhiConfiguration>
    <property name="siddhi.enable.distributed.processing">false</property>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="deliveryStream" name="deliveryStream" version="1.0.0"/>
    <stream as="orderStream" name="orderStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[define table pizza_deliveries
(deliveredTime long, order_id string);

from deliveryStream 
select time, orderNo
insert into pizza_deliveries;

from orderStream#window.time(30 seconds) 
insert into overdueDeliveries for expired-events;

from overdueDeliveries as overdueStream unidirectional join pizza_deliveries 
on pizza_deliveries.order_id == overdueStream.orderNo 
select count(overdueStream.orderNo) as sumOrderId, overdueStream.customerName
insert into deliveredOrders;]]></queryExpressions>
  <exportedStreams>
    <stream name="deliveredOrders" valueOf="deliveredOrders" version="1.0.0"/>
  </exportedStreams>
</executionPlan>
